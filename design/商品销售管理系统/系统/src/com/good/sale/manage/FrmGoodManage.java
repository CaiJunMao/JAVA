/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.good.sale.manage;

import com.good.DBcon.MyDBCon;
import java.awt.Rectangle;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 随缘
 */
public class FrmGoodManage extends javax.swing.JFrame {

    Vector data;
    int row = 0;//下标
    int flag;//标志位，1表示添加数据，2表示修改数据
    Vector title;//在下面实例化
     //表格模式
    DefaultTableModel dtm=new DefaultTableModel();//帮助掌控表格中的数据
    //带滚动条的面板
    JScrollPane scp=new JScrollPane();
    //表格
    JTable tbl=new JTable(dtm);//要先有DefaultTableModel dtm=new DefaultTableModel();把表格模式放入表格作为构造方法的参数
    
    public FrmGoodManage() {
       
        initComponents();
        btnReset.setVisible(false);
        data=MyDBCon.queryVectorData3("Select * from good");
        getTextData(row);
        setLocationRelativeTo(null);//让窗口居中显示
        title = new Vector();//实例化title
        //准备表头的内容
        title.add("商品编号");
        title.add("商品名称");
        title.add("进价");
        title.add("售价"); 
        title.add("产地");
        title.add("出产日期");
        title.add("有效期");
       
        title.add("库存");
        title.add("备注");
        title.add("处理人");
        
        
        
        //放置表格到滚动面板上
        scp.setViewportView(tbl);
        //设置滚动面板位置和大小
        scp.setBounds(new Rectangle(5,420,500,250));
        //将滚动面板放置在窗体的内容面板上
        this.getContentPane().add(scp);
        showTableData();//调用显示表格数据的方法
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {//添加鼠标点击监听器
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClicked(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //根据二维的Vector，在文本框中显示数据的方法,
     public void getTextData(int index){
         Vector line=(Vector)data.get(index);//因为获得的是一个个vector对象，所以用(vector)强制性转换
         txtGno.setText(line.get(0).toString());
         txtGname.setText(line.get(1).toString());
         txtBPrice.setText(line.get(2).toString());
         txtSPrice.setText(line.get(3).toString());
          txtPdate.setText(line.get(4).toString());
         txtOri.setText(line.get(5).toString());
        
         txtEdate.setText(line.get(6).toString());
         
         txtInv.setText(line.get(7).toString());
         txtpMeno.setText(line.get(8).toString());
         txtEman.setText(line.get(9).toString());

         //文本框一显示数据则加锁,表示显示数据时不容许修改
         lock();//但是下面操作按钮不锁
     }
     //在表格中显示数据的方法
    public void showTableData(){
        //利用表格模式显示数据
        dtm.setDataVector(data, title);
    } 
    //加锁的方法,文本,按钮不允许操作
    public void lock(){
        txtGno.setEnabled(false);//该文本框设置为是否可用
        txtGname.setEnabled(false);
        txtBPrice.setEnabled(false);
        txtSPrice.setEnabled(false);
        txtPdate.setEnabled(false);
        txtOri.setEnabled(false);
        txtEdate.setEnabled(false);
        txtInv.setEnabled(false);
        txtpMeno.setEnabled(true);
        txtEman.setEnabled(false);
        btnQuary.setEnabled(true);
        btnSave.setEnabled(false);//保存，取消为关闭状态
        btnCancle.setEnabled(false);
        btnReset.setEnabled(false);
       txtInGno.setEnabled(false);
    }
    //解锁的方法1-记录用
    public void unlock(){
        txtGno.setEnabled(true);//该文本框设置为是否可用
        txtGname.setEnabled(true);
        txtBPrice.setEnabled(true);
        txtSPrice.setEnabled(true);
        txtPdate.setEnabled(true);
        txtOri.setEnabled(true);
        txtEdate.setEnabled(true);
        txtInv.setEnabled(true);
        txtpMeno.setEnabled(true);
        txtEman.setEnabled(true);
        btnQuary.setEnabled(false);
        btnSave.setEnabled(true);//保存，取消为关闭状态
        btnCancle.setEnabled(true);
        btnReset.setEnabled(true);
    }
    //清空文本框的方法
    public void clearText(){
        txtGno.setText("");
        txtGname.setText("");
        txtBPrice.setText("");
        txtSPrice.setText("");
        txtOri.setText("");
        txtPdate.setText(""); 
     
        txtEdate.setText("");
        txtInv.setText("");
        txtpMeno.setText("");
        txtEman.setText("");    
    }
    //表格点击事件处理方法
    public void tblClicked(java.awt.event.MouseEvent evt){
        row=tbl.getSelectedRow();//tbl获得当前选中行的方法getSelectedRow()
        getTextData(row);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtGno = new javax.swing.JTextField();
        txtGname = new javax.swing.JTextField();
        txtBPrice = new javax.swing.JTextField();
        txtSPrice = new javax.swing.JTextField();
        txtEdate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPdate = new javax.swing.JTextField();
        btnIngood = new javax.swing.JButton();
        btnUpdata = new javax.swing.JButton();
        btnDelect = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtOri = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtInv = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtInGno = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtpMeno1 = new javax.swing.JScrollPane();
        txtpMeno = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        txtEman = new javax.swing.JTextField();
        btnQuary = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnFormer = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnCancle = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnunlock = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("商品管理");

        jLabel1.setText("商品编号");

        jLabel2.setText("商品名");

        jLabel3.setText("进货价格");

        jLabel4.setText("销售价格");

        jLabel5.setText("保质期限");

        jLabel6.setText("生产日期");

        btnIngood.setText("进货");
        btnIngood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngoodActionPerformed(evt);
            }
        });

        btnUpdata.setText("修改");
        btnUpdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdataActionPerformed(evt);
            }
        });

        btnDelect.setText("删除");
        btnDelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelectActionPerformed(evt);
            }
        });

        btnReturn.setText("返回");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        jLabel7.setText("产地");

        jLabel8.setText("现有库存");

        jLabel9.setText("进货数量");

        jLabel10.setText("备注");

        txtpMeno.setColumns(20);
        txtpMeno.setRows(5);
        txtpMeno1.setViewportView(txtpMeno);

        jLabel11.setText("处理人");

        txtEman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmanActionPerformed(evt);
            }
        });

        btnQuary.setText("查询");
        btnQuary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuaryActionPerformed(evt);
            }
        });

        btnSave.setText("保存");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnFirst.setText("<<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnFormer.setText("<");
        btnFormer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormerActionPerformed(evt);
            }
        });

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">>");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnCancle.setText("取消");
        btnCancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancleActionPerformed(evt);
            }
        });

        btnReset.setText("重置");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnunlock.setText("解锁");
        btnunlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnunlockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIngood)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdata)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelect)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuary)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFormer, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReturn))
                    .addComponent(txtpMeno1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtGno, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                        .addComponent(txtBPrice))
                                    .addComponent(txtPdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtOri))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtInGno))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnunlock)))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEman, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtGname, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(txtSPrice)
                                .addComponent(txtEdate)
                                .addComponent(txtInv)))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtGno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtBPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtPdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtOri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtInv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtInGno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtEman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(btnunlock, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtpMeno1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIngood)
                    .addComponent(btnUpdata)
                    .addComponent(btnDelect)
                    .addComponent(btnQuary)
                    .addComponent(btnReset)
                    .addComponent(btnSave))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnFormer)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(btnCancle)
                    .addComponent(btnReturn))
                .addContainerGap(180, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //删除
    private void btnDelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelectActionPerformed
        if(JOptionPane.showConfirmDialog(null, "你是否确定要删除该数据","确认删除",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION){//确认对话框，不是提示信息框，如果等于JOptionPane.YES_OPTION，也就是返回值真的是我们点yes该函数的返回值，才说明用户确认了           
            String gNo=txtGno.getText();//获得要删除的书号，其他不用，因为编号唯一
            String sql="delete from good where gNo='"+gNo+"'";//删除的sql语句
            if(MyDBCon.updateData(sql)){//调用MyDBCon的更新语句
                //刷新表格中数据
                data=MyDBCon.queryVectorData3("select * from good");
                showTableData();
                //刷新文本框中数据，即显示第一条数据
                getTextData(0);
                JOptionPane.showMessageDialog(null,"删除数据成功","系统提示",JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null,"删除数据失败,可能数据不存在请刷新重试","系统提示",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDelectActionPerformed
    //保存
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //获得输入的新数据
        String gNo=txtGno.getText();
        //System.out.println("BookID为"+""+"NULL"+BookID+"KONG"+" ");当文本框不输东西时啥都没有
        String gName=txtGname.getText();
        String bPrice=txtBPrice.getText();
        String sPrice=txtSPrice.getText();
        String origin=txtPdate.getText();
        String pDate=txtOri.getText();
        String eDate=txtEdate.getText();
        String inventory=txtInv.getText();
        String meno=txtpMeno.getText();
        String Cman=txtEman.getText();
        String sql="";
        switch(flag){
            //添加
            case 1:
                if(gNo.length()==0){sql="insert into good values(NULL,'"+gName+"','"+bPrice+"','"+sPrice+"','"+origin+"','"+pDate+"','"+eDate+"','"+inventory+"','"+meno+"','"+Cman+"')";}//最终形成insert into Book values(NULL,'','','','','')而不是insert into Book values('NULL','','','','','')
                else{
                    sql="insert into good values('"+gNo+"','"+gName+"','"+bPrice+"','"+sPrice+"','"+origin+"','"+pDate+"','"+eDate+"','"+inventory+"','"+meno+"','"+Cman+"')";
                }//不能直接"insert into Student values(BookID,BookName,Author,Press,PressDate,Status)",就算打单引号也不行，因为放双引号里就变成了字符串，但是要求是BookID,BookName,Author,Press,PressDate,Status是变量，所以要断开，连接，单引号是BookID等的单引号
                break;
            //修改    
            case 2://BookID不可修改，所以修改后不用像添加按钮一样判断
                sql="update good set gName='"+gName+"',bPrice='"+bPrice+"',sPrice='"+sPrice+"',origin='"+origin+"',pDate='"+pDate+"',eDate='"+eDate+"',inventory='"+inventory+"',meno='"+meno+"',Cman='"+Cman+"' where BookID='"+gNo+"'";//书号还是原来的数据
        } 
        System.out.println(sql);//看看输入的sql格式是否正确
        //保存到表中
        if(MyDBCon.updateData(sql)){//跟数据库打交道，要到MyDBCon中去写//更新成功就返回true
            //刷新表格中数据，不然虽然写进去了，但是界面还是原来的文本框信息
            data=MyDBCon.queryVectorData3("select * from good");
            showTableData();//显示出更新后的数据
            //成功的话弹出对话框告诉用户成功
            JOptionPane.showMessageDialog(null,"保存数据成功","系统提示",JOptionPane.INFORMATION_MESSAGE);//提示对话框
        }else{
            JOptionPane.showMessageDialog(null,"保存数据失败","系统提示",JOptionPane.ERROR_MESSAGE);//错误对话框
        }
        lock();//重新锁上
        btnReset.setVisible(false);//
    }//GEN-LAST:event_btnSaveActionPerformed
//修改
    private void btnUpdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdataActionPerformed
        unlock();//添加修改，删除都一样先解锁，使得只有数据可改，可保存，取消按钮可操作
        txtGno.setEnabled(false);//但是书的编号不可改,同我们学号一样，可改不可删
        flag=2;
        btnReset.setVisible(true);
    }//GEN-LAST:event_btnUpdataActionPerformed
//下一条数据
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if(row<(data.size()-1)){//data.size()-1)是最后一条数据
        row++;//每按一次按钮，row加一，再显示这样就读了下一条数据，但是要主要下标越界
        getTextData(row);
        }
        else{
             JOptionPane.showMessageDialog(null,"已经是最后一条数据了","系统提示",JOptionPane.INFORMATION_MESSAGE);
        // JOptionP的方法showMessageDialog有四个参数，容器，内容，标题，信息框的标志位
        //JOptionPane需要导包
        }
    }//GEN-LAST:event_btnNextActionPerformed
//上一条数据
    private void btnFormerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormerActionPerformed
        if(row>0){//data.size()-1)是最后一条数据
        row--;//每按一次按钮，row加一，再显示这样就读了下一条数据，但是要主要下标越界
        getTextData(row);
        }
        else{
             JOptionPane.showMessageDialog(null,"已经是第一条数据了","系统提示",JOptionPane.INFORMATION_MESSAGE);
        }//最后一条和第一条，直接让row为0或row=(data.size()-1)就可
    }//GEN-LAST:event_btnFormerActionPerformed
//第一条
    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        row=0;
        getTextData(row);
    }//GEN-LAST:event_btnFirstActionPerformed
//取消按钮
    private void btnCancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancleActionPerformed
        getTextData(row);//当点了添加，修改，删除按钮后取消，即重新显示数据即可
       // lock();//因为这三个按钮都解锁了，需重新锁上,getTextData2(row);内部有了lock(),所以不用加
        btnReset.setVisible(false);
    }//GEN-LAST:event_btnCancleActionPerformed
//重置按钮
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        switch(flag){
            case 1:clearText();break;//对添加
            case 2:{                 //对修改，清空当前文本框？？但是编号不能清,所以不能照搬清空数据的方法clearText();，于是找它的一部分
                txtGname.setText("");
        txtBPrice.setText("");
        txtSPrice.setText("");
        txtOri.setText("");
        txtPdate.setText(""); 
     
        txtEdate.setText("");
        txtInv.setText("");
        txtpMeno.setText("");
        txtEman.setText(""); 

                break;
            }
        }
    }//GEN-LAST:event_btnResetActionPerformed
//最后一条
    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        row=data.size()-1;
        getTextData(row);
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnIngoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngoodActionPerformed
        unlock();//按添加时先解锁
        flag=1;
        clearText();//清空文本框
        btnReset.setVisible(true);//写到一半可清空:
    }//GEN-LAST:event_btnIngoodActionPerformed

    private void txtEmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmanActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
         FrmManager frame=new FrmManager();
         frame.setSize(444,300);
         frame.setVisible(true);
         frame.setLocationRelativeTo(null);//窗口在屏幕中间显示 
         this.dispose();
         //关闭当前窗体
    }//GEN-LAST:event_btnReturnActionPerformed
//查询
    private void btnQuaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuaryActionPerformed
        //获得用户给的条件
        
        String gNo=txtGno.getText();
        String gName=txtGname.getText();
        String bPrice=txtBPrice.getText();
        String sPrice=txtSPrice.getText();
        String origin=txtOri.getText();
        String pDate=txtPdate.getText();
        String inventory=txtInv.getText();
        String eDate=txtEdate.getText();
        String meno=txtpMeno.getText();
        String Cman=txtEman.getText();
        
        //写先写简单的获取全部的sql语句，
        String sql="Select * from good";
        //再加判断条件
        String query="";//原来的sql语句,下面是各个查询条件
        
        if(gNo.length()>0){//大于零则说明用户输入了条件
            query="gNo like '%"+gNo+"%'";
        }//作为第一个条件，故无else的情况
        
        if(gName.length()>0){
            if(query.length()>0)
                query=query+ "and gName like '%"+gName+"%'";
            else//等于零不用拼接，表示是第一个条件
                query="gName like '%"+gName+"%'";
        }
      
        if(bPrice.length()>0){
            if(query.length()>0)
                query=query+ "and bPrice like '%"+bPrice+"%'";
            else
                query="bPrice like '%"+bPrice+"%'";
        }
       
        if(sPrice.length()>0){
            if(query.length()>0)
                query=query+ "and sPrice like '%"+sPrice+"%'";
            else
                query="sPrice like '%"+sPrice+"%'";
        }
        
        if(origin.length()>0){
            if(query.length()>0)
                query=query+"and origin='"+origin+"'";
            else
                query="origin='"+origin+"'";
        }
         if(pDate.length()>0){
            if(query.length()>0)
                query=query+ "and pDate like '%"+pDate+"%'";
            else//等于零不用拼接，表示是第一个条件
                query="pDate like '%"+gName+"%'";
        }
      
        if(inventory.length()>0){
            if(query.length()>0)
                query=query+ "and inventory like '%"+inventory+"%'";
            else
                query="inventory like '%"+inventory+"%'";
        }
       
        if(eDate.length()>0){
            if(query.length()>0)
                query=query+ "and eDate like '%"+eDate+"%'";
            else
                query="eDate like '%"+eDate+"%'";
        }
        
        if(meno.length()>0){
            if(query.length()>0)
                query=query+"and meno='"+meno+"'";
            else
                query="meno='"+meno+"'";
        }
        if(Cman.length()>0){
            if(query.length()>0)
                query=query+"and Cman='"+Cman+"'";
            else
                query="Cman='"+Cman+"'";
        }
        //形成最终的SQL语句
        if(query.length()>0){//即最终的查询条件长度大于0，说明用户有输入条件
            sql=sql+" where "+query;
        }//等于零相当于查询所有，即一开始写的String sql="Select * from Borrow";即没有查询条件
        System.out.println(sql);
        //执行查询
        data=MyDBCon.queryVectorData3(sql);//调用MyDBC里查询的方法,因为是表格显示数据，所以一定要用二维的显示数据的方法
        //在表格中显示数据
        dtm.setDataVector(data, title);//默认的表格模式再次设置数据和表头
        lock();
    }//GEN-LAST:event_btnQuaryActionPerformed
//解锁
    private void btnunlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnunlockActionPerformed
        unlock();
    }//GEN-LAST:event_btnunlockActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGoodManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGoodManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGoodManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGoodManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGoodManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancle;
    private javax.swing.JButton btnDelect;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnFormer;
    private javax.swing.JButton btnIngood;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnQuary;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdata;
    private javax.swing.JButton btnunlock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtBPrice;
    private javax.swing.JTextField txtEdate;
    private javax.swing.JTextField txtEman;
    private javax.swing.JTextField txtGname;
    private javax.swing.JTextField txtGno;
    private javax.swing.JTextField txtInGno;
    private javax.swing.JTextField txtInv;
    private javax.swing.JTextField txtOri;
    private javax.swing.JTextField txtPdate;
    private javax.swing.JTextField txtSPrice;
    private javax.swing.JTextArea txtpMeno;
    private javax.swing.JScrollPane txtpMeno1;
    // End of variables declaration//GEN-END:variables
}
